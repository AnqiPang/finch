// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/runfinch/finch/pkg/fmemory (interfaces: Memory)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Memory is a mock of Memory interface.
type Memory struct {
	ctrl     *gomock.Controller
	recorder *MemoryMockRecorder
}

// MemoryMockRecorder is the mock recorder for Memory.
type MemoryMockRecorder struct {
	mock *Memory
}

// NewMemory creates a new mock instance.
func NewMemory(ctrl *gomock.Controller) *Memory {
	mock := &Memory{ctrl: ctrl}
	mock.recorder = &MemoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Memory) EXPECT() *MemoryMockRecorder {
	return m.recorder
}

// TotalMemory mocks base method.
func (m *Memory) TotalMemory() uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TotalMemory")
	ret0, _ := ret[0].(uint64)
	return ret0
}

// TotalMemory indicates an expected call of TotalMemory.
func (mr *MemoryMockRecorder) TotalMemory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TotalMemory", reflect.TypeOf((*Memory)(nil).TotalMemory))
}
